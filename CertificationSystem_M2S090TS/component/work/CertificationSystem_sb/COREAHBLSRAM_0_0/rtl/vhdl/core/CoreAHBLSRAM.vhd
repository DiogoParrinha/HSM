----------------------------------------------------------------------------------------------
--
-- VHDL file generated by X-HDL - Revision 3.2.52  Mar. 28, 2005 
-- Mon Feb 22 12:31:53 2016
--
--      Input file         : //idm/IPEngg/Technical/maheswark/CoreAHBLSRAM/RTL/trunk/rtl/vlog/core/CoreAHBLSRAM.v
--      Design name        : CertificationSystem_sb_COREAHBLSRAM_0_0_COREAHBLSRAM
--      Author             : 
--      Company            : 
--
--      Description        : 
--
--
----------------------------------------------------------------------------------------------
--
library ieee;
use     ieee.std_logic_1164.all;
use     ieee.std_logic_arith.all;
use     ieee.std_logic_unsigned.all;
use     ieee.std_logic_misc.all;
use     work.coreahblsram_pkg.all;


ENTITY CertificationSystem_sb_COREAHBLSRAM_0_0_COREAHBLSRAM IS
   GENERIC (
      FAMILY                         :  integer := 19;    
      AHB_DWIDTH                     :  integer := 32;    
      AHB_AWIDTH                     :  integer := 32;    
      LSRAM_NUM_LOCATIONS_DWIDTH32   :  integer := 512;    
      USRAM_NUM_LOCATIONS_DWIDTH32   :  integer := 128;    
      SEL_SRAM_TYPE                  :  integer := 1);    
      --SYNC_RESET                     :  integer := to_integer('1' WHEN (FAMILY = 25) ELSE '0'));  
   
   PORT (
      HCLK                    : IN std_logic;   
      HRESETN                 : IN std_logic;   
      HSEL                    : IN std_logic;   
      HREADYIN                : IN std_logic;   
      HSIZE                   : IN std_logic_vector(2 DOWNTO 0);   
      HTRANS                  : IN std_logic_vector(1 DOWNTO 0);   
      HBURST                  : IN std_logic_vector(2 DOWNTO 0);   
      HADDR                   : IN std_logic_vector(AHB_AWIDTH - 1 DOWNTO 0);   
      HWRITE                  : IN std_logic;   
      HWDATA                  : IN std_logic_vector(AHB_DWIDTH - 1 DOWNTO 0);   
      HREADYOUT               : OUT std_logic;   
      HRDATA                  : OUT std_logic_vector(AHB_DWIDTH - 1 DOWNTO 0);   
      HRESP                   : OUT std_logic_vector(1 DOWNTO 0));   
END CertificationSystem_sb_COREAHBLSRAM_0_0_COREAHBLSRAM;

ARCHITECTURE translated OF CertificationSystem_sb_COREAHBLSRAM_0_0_COREAHBLSRAM IS

   CONSTANT SYNC_RESET : INTEGER := SYNC_MODE_SEL(FAMILY);

   COMPONENT CertificationSystem_sb_COREAHBLSRAM_0_0_AHBLSramIf 
 	GENERIC (
      --//////////////////////////////////////////////////////////////////////////////
      -- Parameter Declarations
      --//////////////////////////////////////////////////////////////////////////////
      SYNC_RESET                     :  integer := 0;
      AHB_DWIDTH                     :  integer := 32;    
      AHB_AWIDTH                     :  integer := 32;    
      RESP_OKAY                      :  std_logic_vector(1 DOWNTO 0) := 
      "00";    
      RESP_ERROR                     :  std_logic_vector(1 DOWNTO 0) := 
      "01";    
      -- AHB HTRANS definition
      TRN_IDLE                       :  std_logic_vector(1 DOWNTO 0) := 
      "00";    
      TRN_BUSY                       :  std_logic_vector(1 DOWNTO 0) := 
      "01";    
      TRN_SEQ                        :  std_logic_vector(1 DOWNTO 0) := 
      "11";    
      TRN_NONSEQ                     :  std_logic_vector(1 DOWNTO 0) := 
      "10");    
   PORT (
      --//////////////////////////////////////////////////////////////////////////////
-- I/O Declarations
--//////////////////////////////////////////////////////////////////////////////
-- Inputs

      HCLK                    : IN std_logic;   
      HRESETN                 : IN std_logic;   
      HSEL                    : IN std_logic;   
      HTRANS                  : IN std_logic_vector(1 DOWNTO 0);   
      HBURST                  : IN std_logic_vector(2 DOWNTO 0);   
      HWRITE                  : IN std_logic;   
      HSIZE                   : IN std_logic_vector(2 DOWNTO 0);   
      HADDR                   : IN std_logic_vector(19 DOWNTO 0);   
      HWDATA                  : IN std_logic_vector(AHB_DWIDTH - 1 
      DOWNTO 0);   
      HREADYIN                : IN std_logic;   
      sramahb_ack             : IN std_logic;   
      sramahb_rdata           : IN std_logic_vector(AHB_DWIDTH - 1 
      DOWNTO 0);   
      HRESP                   : OUT std_logic_vector(1 DOWNTO 0);   
      -- Outputs

      HREADYOUT               : OUT std_logic;   
      HRDATA                  : OUT std_logic_vector(AHB_DWIDTH - 1 
      DOWNTO 0);   
      ahbsram_req             : OUT std_logic;   
      ahbsram_write           : OUT std_logic;   
      ahbsram_wdata           : OUT std_logic_vector(AHB_AWIDTH - 1 
      DOWNTO 0);   
      ahbsram_wdata_usram     : OUT std_logic_vector(AHB_DWIDTH - 1 DOWNTO 0);   
      ahbsram_size            : OUT std_logic_vector(2 DOWNTO 0);   
      ahbsram_addr            : OUT std_logic_vector(19 DOWNTO 0);   
      BUSY                    : IN std_logic);   
END COMPONENT;


COMPONENT CertificationSystem_sb_COREAHBLSRAM_0_0_SramCtrlIf  
   GENERIC (
      --//////////////////////////////////////////////////////////////////////////////
      -- Parameter Declarations
      --//////////////////////////////////////////////////////////////////////////////
      SYNC_RESET                     :  integer := 0;
      SEL_SRAM_TYPE                  :  integer := 1;    
      LSRAM_NUM_LOCATIONS_DWIDTH32   :  integer := 512;    
      USRAM_NUM_LOCATIONS_DWIDTH32   :  integer := 128;    
      AHB_DWIDTH                     :  integer := 32);    
   PORT (
      --//////////////////////////////////////////////////////////////////////////////
-- I/O Declarations
--//////////////////////////////////////////////////////////////////////////////
-- Inputs

      HCLK                    : IN std_logic;   
      HRESETN                 : IN std_logic;   
      ahbsram_req             : IN std_logic;   
      ahbsram_write           : IN std_logic;   
      ahbsram_wdata           : IN std_logic_vector(AHB_DWIDTH - 1 
      DOWNTO 0);   
      ahbsram_size            : IN std_logic_vector(2 DOWNTO 0);   
      ahbsram_addr            : IN std_logic_vector(19 DOWNTO 0);   
      -- Outputs

      sramahb_ack             : OUT std_logic;   
      sramahb_rdata           : OUT std_logic_vector(AHB_DWIDTH - 1 
      DOWNTO 0);   
      ahbsram_wdata_usram     : IN std_logic_vector(AHB_DWIDTH - 1 DOWNTO 0);   
      BUSY                    : OUT std_logic);   
END COMPONENT;


   SIGNAL HADDR_cal                :  std_logic_vector(19 DOWNTO 0);   
   SIGNAL ahbsram_size             :  std_logic_vector(2 DOWNTO 0);   
   SIGNAL ahbsram_addr             :  std_logic_vector(19 DOWNTO 0);   
   SIGNAL ahbsram_wdata            :  std_logic_vector(31 DOWNTO 0);   
   SIGNAL ahbsram_wdata_usram      :  std_logic_vector(31 DOWNTO 0);   
   SIGNAL ahbsram_write            :  std_logic;   
   SIGNAL sramahb_rdata            :  std_logic_vector(31 DOWNTO 0);   
   SIGNAL HRDATA_xhdl1             :  std_logic_vector(AHB_DWIDTH - 1 DOWNTO 0);   
   SIGNAL HRESP_xhdl2              :  std_logic_vector(1 DOWNTO 0);   
   SIGNAL HREADYOUT_xhdl3          :  std_logic;   
   SIGNAL BUSY                     :  std_logic;   
   SIGNAL ahbsram_req              :  std_logic;   
   SIGNAL sramahb_ack              :  std_logic;   

BEGIN
   HRDATA <= HRDATA_xhdl1;
   HRESP <= HRESP_xhdl2;
   HREADYOUT <= HREADYOUT_xhdl3;
   HADDR_cal <= HADDR(19 DOWNTO 0) ;
   -- <<X-HDL>> Can't find translated component 'CertificationSystem_sb_COREAHBLSRAM_0_0_AHBLSramIf'. Port & generic names and types may not match. No template will be included
   U_CertificationSystem_sb_COREAHBLSRAM_0_0_AHBLSramIf : CertificationSystem_sb_COREAHBLSRAM_0_0_AHBLSramIf 
      GENERIC MAP (
         SYNC_RESET => SYNC_RESET)
      PORT MAP (
         HCLK => HCLK,
         HRESETN => HRESETN,
         HSEL => HSEL,
         HTRANS => HTRANS,
         HBURST => HBURST,
         HWRITE => HWRITE,
         HWDATA => HWDATA,
         HSIZE => HSIZE,
         HADDR => HADDR_cal,
         HREADYIN => HREADYIN,
         sramahb_ack => sramahb_ack,
         sramahb_rdata => sramahb_rdata,
         HREADYOUT => HREADYOUT_xhdl3,
         HRESP => HRESP_xhdl2,
         ahbsram_req => ahbsram_req,
         ahbsram_write => ahbsram_write,
         ahbsram_wdata => ahbsram_wdata,
         ahbsram_wdata_usram => ahbsram_wdata_usram,
         ahbsram_size => ahbsram_size,
         ahbsram_addr => ahbsram_addr,
         HRDATA => HRDATA_xhdl1,
         BUSY => BUSY);   
   
   -- <<X-HDL>> Can't find translated component 'CertificationSystem_sb_COREAHBLSRAM_0_0_SramCtrlIf'. Port & generic names and types may not match. No template will be included
   U_SramCtrlIf : CertificationSystem_sb_COREAHBLSRAM_0_0_SramCtrlIf 
      GENERIC MAP (
         SEL_SRAM_TYPE => SEL_SRAM_TYPE,
         LSRAM_NUM_LOCATIONS_DWIDTH32 => LSRAM_NUM_LOCATIONS_DWIDTH32,
         SYNC_RESET => SYNC_RESET,
         USRAM_NUM_LOCATIONS_DWIDTH32 => USRAM_NUM_LOCATIONS_DWIDTH32)
      PORT MAP (
         HCLK => HCLK,
         HRESETN => HRESETN,
         ahbsram_req => ahbsram_req,
         ahbsram_write => ahbsram_write,
         ahbsram_wdata => ahbsram_wdata,
         ahbsram_wdata_usram => ahbsram_wdata_usram,
         ahbsram_size => ahbsram_size,
         ahbsram_addr => ahbsram_addr,
         sramahb_ack => sramahb_ack,
         sramahb_rdata => sramahb_rdata,
         BUSY => BUSY);   
   

END translated;
